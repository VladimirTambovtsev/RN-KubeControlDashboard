# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

before_all do
  ensure_git_branch
  ensure_git_status_clean
  git_pull
end

default_platform(:ios)

platform :ios do
  private_lane :update_version do
    app_store_version = get_app_store_version_number(bundle_id: "KubeControlDashboard")
    plist_version = get_version_number_from_plist(xcodeproj: "KubeControlDashboard.xcodeproj")
    if Gem::Version.new(plist_version.to_f) == Gem::Version.new(app_store_version.to_f)
      UI.message "bumping minor"
      increment_version_number_in_plist(xcodeproj: "KubeControlDashboard.xcodeproj", bump_type: "minor")
    else
      UI.message "bumping patch"
      increment_version_number_in_plist(xcodeproj: "KubeControlDashboard.xcodeproj", bump_type: "patch")
    end
  end

  private_lane :staging_build do
    increment_build_number_in_plist(xcodeproj: 'KubeControlDashboard.xcodeproj', target: 'KubeControlDashboard')
    gym(scheme: "KubeControlDashboard-staging", workspace: "KubeControlDashboard.xcworkspace")
  end

  desc 'Fetch certificates and provisioning profiles'
  lane :certificates do
    match(app_identifier: 'pro.tambovtsev.KubeControlDashboard', type: 'development', readonly: true)
    match(app_identifier: 'pro.tambovtsev.KubeControlDashboard', type: 'appstore', readonly: true)
  end

  desc "Run iOS Tests"
  lane :tests do
    run_tests(scheme: "MyAppTests")
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    staging_build
    # build_app(workspace: "KubeControlDashboard.xcworkspace", scheme: "KubeControlDashboard")
    upload_to_testflight(username: "tambovcev99@mail.ru", app_identifier: "KubeControlDashboard")
    commit_version_bump(message: "bump build")
    push_to_git_remote
  end

  desc "Push a new beta build to TestFlight"
  lane :beta2 do
    increment_build_number(xcodeproj: "KubeControlDashboard.xcodeproj")
    build_app(workspace: "KubeControlDashboard.xcworkspace", scheme: "KubeControlDashboard")
    upload_to_testflight
  end
end
